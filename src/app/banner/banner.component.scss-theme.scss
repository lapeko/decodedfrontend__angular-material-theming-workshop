@use "@angular/material" as mat;
@use "@material/density";
@use "sass:map" as map;

$banner-density-config: (
  height: (
    default: 120px,
    maximum: 150px,
    minimum: 90px,
  )
) !default;

@mixin apply-banner-color($color-config, $color-name) {
  $palette: map.get($color-config, $color-name);
  @if $color-name == success {
    @debug mat.get-color-from-palette($palette);
  }
  &.app-banner-#{$color-name} {
    background: mat.get-color-from-palette($palette, default); // lighter, darker
    color: mat.get-contrast-color-from-palette($palette, default);
  }
}

@mixin density($density-scale) {
  $height: density.prop-value($banner-density-config, $density-scale, height);

  app-banner {
    min-height: $height;
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  $typography-config: mat.get-typography-config($theme);
  $density-config: mat.get-density-config($theme);

  $background-palette: map.get($color-config, background);
  $foreground-palette: map.get($color-config, foreground);
  $error-palette: map.get($color-config, warn);

  app-banner {
    display: block;
    background: mat.get-color-from-palette($background-palette, card);
    color: mat.get-color-from-palette($foreground-palette, base);


    @include apply-banner-color($color-config, primary);
    @include apply-banner-color($color-config, success);
    @include apply-banner-color($color-config, warn);
    @include apply-banner-color($color-config, accent);

    @include mat.overridable-elevation(2, mat.get-color-from-palette($error-palette, 500));
  }

  @if $typography-config != null {
    @include typography($typography-config);
  }

  @if $density-config != null {
    @include density($density-config);
  }
}

@mixin typography($typography-config) {
  h3.heading {
    @include mat.typography-level($typography-config, headline-6);
  }
  .message {
    @include mat.typography-level($typography-config, body-1);
  }
}
